on:
  pull_request:
  push:
    branches:
      - main
    tags:
      - 'v*'
  workflow_dispatch:

name: CI

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: check

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: rustup component add rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: clippy
          override: true
      - uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features
          name: Clippy Output

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2.5.1

      - name: Set up toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: llvm-tools-preview

      - name: Install cargo-llvm-cov
        run: if [[ ! -e ~/.cargo/bin/cargo-llvm-cov ]]; then cargo install cargo-llvm-cov; fi

      - name: Generate code coverage
        run: cargo llvm-cov --all-features --workspace --lcov --output-path coverage.lcov

      - name: Upload test coverage
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: coverage.lcov

  profiling:
    name: Profiling
    if: github.ref != 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: Checkout main
        uses: actions/checkout@v3
        with:
          ref: main
      - name: Profiling baseline
        run: cargo bench --bench benchmarks -- --save-baseline main
      - name: Checkout HEAD
        uses: actions/checkout@v3
        with:
          clean: false
      - name: Profiling changes
        run: cargo bench --bench benchmarks -- --baseline main > results.txt
      - name: Setup nodejs
        uses: actions/setup-node@v3
      - name: Generate report markdown
        run: (echo '# Profiling Report' && echo '```diff' && cat results.txt && echo '```') | ./scripts/diff.js > report.md
      - name: Display report
        uses: mshick/add-pr-comment@v2
        with:
          message-path: report.md

  publish:
    name: Publish artifact
    needs: [check, fmt, clippy, test]
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: cargo publish --token ${CRATES_TOKEN}
        env:
          CRATES_TOKEN: ${{ secrets.CRATES_TOKEN }}